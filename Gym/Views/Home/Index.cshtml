@{
    ViewBag.Title = "Khách hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>
<html>
<div id="overlay" style="text-align: center; position: fixed; background: rgba(0,0,0,0.2); width: 100%; height: 100%; top: 0; left: 0;  z-index: 9999;">
    <div class="loader col-md-12" style="position: fixed; top: 50%;">
        <div class="spinner-grow text-muted"></div>
        <div class="spinner-grow text-primary"></div>
        <div class="spinner-grow text-success"></div>
        <div class="spinner-grow text-info"></div>
        <div class="spinner-grow text-warning"></div>
        <div class="spinner-grow text-danger"></div>
        <div class="spinner-grow text-secondary"></div>
        <div class="spinner-grow text-dark"></div>
        <div class="spinner-grow text-light"></div>
    </div>
</div>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Khách hàng</title>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        @@media screen and (orientation:portrait) {

            td {
                font-size: 20px;
            }

            th {
                white-space: nowrap;
            }

            #LayoutMobile {
                display: block;
            }

            #LayoutDesktop {
                display: none !important;
            }

            #LayoutDetailMobile {
                display: block;
            }

            #LayoutDetailDesktop {
                display: none;
            }
        }

        @@media screen and (orientation:landscape) {
            #LayoutMobile {
                display: none;
            }

            #LayoutDesktop {
                display: block;
            }

            #LayoutDetailMobile {
                display: none;
            }

            #LayoutDetailDesktop {
                display: block;
            }
        }

        .block {
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 2;
            overflow: hidden;
            width: 100%
        }
    </style>
</head>
<body>
    <!-- TOP TOOLBAR WRAPPER -->
    @*@RenderPage("~/Views/Shared/_Navbar.cshtml")*@
    <!-- END TOP TOOLBAR WRAPPER -->
    <div class="row m-0">
        <div class="col-12 m-0 p-0 shadow" style="background-color: rgba(255,255,255,0.9)">
            <div id="divGroup" class="d-flex flex-wrap">
            </div>
        </div>
        <div class="container-fluid bg-white fixed-top" style="background-color: rgba(255,255,255,0.9)">
            <div class="row justify-content-center px-3 py-2">
                <!-- Nút hamburger thu gọn, chỉ hiển thị trên màn nhỏ -->
                <div class="d-lg-none d-flex justify-content-between align-items-center mb-2 px-3">
                    <div class="flex-grow-1 text-center">
                        <h5 class="fw-bold text-primary m-0" style="letter-spacing: 1px;">
                            GYM SHOP
                        </h5>
                    </div>
                    <button id="btnMenu"
                            class="btn btn-outline-secondary ms-3"
                            type="button"
                            aria-expanded="false"
                            aria-controls="mainMenu">
                        ☰ Menu
                    </button>
                </div>

                <!-- Menu chính -->
                <div class="collapse d-lg-flex flex-wrap align-items-center justify-content-center" id="mainMenu">
                    <div class="dropdown m-2">
                        <button class="btn btn-light dropdown-toggle" type="button" id="userDropdown"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"
                                style="border-radius: 20px;">
                            <i class="fas fa-user"></i> 6011
                        </button>
                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="userDropdown">
                            <a class="dropdown-item" href="#">
                                <i class="fas fa-user"></i> <span>Thông tin người dùng</span>
                            </a>
                            <a class="dropdown-item" href="/Home/Note">
                                <i class="far fa-sticky-note"></i> <span>Ghi chú</span>
                            </a>
                            <a class="dropdown-item" href="/Home/Logout">
                                <i class="fas fa-sign-out-alt"></i> <span>Đăng xuất</span>
                            </a>
                        </div>
                    </div>
                    <a href="@Url.Action("Index", "Home")" class="btn btn-primary m-2" style="border-radius: 20px;">
                        Khách hàng
                    </a>
                    <a href="@Url.Action("Contact", "Home")" class="btn btn-light m-2" style="border-radius: 20px;">
                        Gói đăng ký
                    </a>
                    <a href="@Url.Action("About", "Home")" class="btn btn-light m-2" style="border-radius: 20px;">
                        Báo cáo
                    </a>
                </div>
            </div>
        </div>

        <div class="col-12" style="padding-top: 80px; margin-top: 20px;">
            <div class="row p-2 m-0">
                <div class="col-xl-2 m-10 p-10 mb-3">
                    <div class="p-3 shadow rounded-border" style="background-color: whitesmoke; border-radius: 20px;">
                        <div class="form-group">
                            <label>Mã phòng :</label>
                            <select id="cbbRoomSearch" class="form-control" onchange="">
                            </select>
                        </div>
                        <div class="form-group">
                            <label>Mã :</label>
                            <input type="text" class="form-control" id="txtCode">
                        </div>
                        <div class="form-group">
                            <label>Tên :</label>
                            <input type="text" class="form-control" id="txtName">
                        </div>
                        <div class="form-group">
                            <label>CCCD :</label>
                            <input type="text" class="form-control" id="txtCCCD">
                        </div>
                        <div class="text-right">
                            <button type="button" class="btn btn-outline-primary" style="border-radius: 20px;" onclick="fnGetCustomer()"><i class="fas fa-search"></i>Tìm kiếm</button>
                        </div>
                    </div>
                </div>
                <div class="col-xl-10 m-10 p-10">
                    <div class="p-3 shadow rounded-border" style="border-radius: 20px; background-color: whitesmoke">
                        <div class="row no-gutters">
                            <div class="col-auto">
                                <button type="button"
                                        id="add-customer-btn"
                                        class="btn btn-primary"
                                        style="margin-bottom: 8px; border-radius: 20px;">
                                    <i class="fas fa-plus"></i> Thêm
                                </button>
                            </div>
                        </div>
                        <div id="LayoutDesktop">
                            <table id="customer-table" class="table table-rounded table-hover" cellspacing="0" width="100%">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>Mã phòng</th>
                                        <th>Mã</th>
                                        <th>Tên</th>
                                        <th>Giới tính</th>
                                        <th>Email</th>
                                        <th>Số điện thoại</th>
                                        <th>CCCD</th>
                                        <th>Địa chỉ</th>
                                        <th>Ngày hết hạn</th>
                                        <th>Người tạo</th>
                                        <th>Ngày tạo</th>
                                        <th>Trạng thái</th>
                                        <th>Ghi chú</th>
                                        <th></th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                        <div id="LayoutMobile">
                            <input type="text" id="txtSearchInvoice" class="form-control mb-3" placeholder="Tìm kiếm mã, tên, đvt, giá, mô tả..." />
                            <div id="cardInvoice"></div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <div class="modal fade" id="customer-modal" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="border-radius: 20px">
                <div class="modal-header">
                    <h4 class="modal-title">Khách hàng</h4>
                    <button type="button" class="close" data-dismiss="modal" id="close-modal">&times;</button>
                </div>
                <form id="customer-form">
                    <div class="modal-body">
                        <div class="form-group">
                            <label>Mã</label>
                            <label style="color: red;">(*)</label>
                            <input type="text" id="customer-code" class="form-control" readonly />
                        </div>
                        <div class="form-group">
                            <label>Tên</label>
                            <label style="color: red;">(*)</label>
                            <input type="text" id="customer-name" class="form-control" />
                            <div class="invalid-feedback">err</div>
                        </div>
                        <div class="form-group">
                            <label>Email</label>
                            <label style="color: red;">(*)</label>
                            <input type="text" id="customer-email" class="form-control" />
                            <div class="invalid-feedback">err</div>
                        </div>
                        <div class="form-group">
                            <label>SĐT</label>
                            <label style="color: red;">(*)</label>
                            <input type="text" id="customer-phone" class="form-control" />
                            <div class="invalid-feedback">err</div>
                        </div>
                        <div class="form-group">
                            <label>CCCD</label>
                            <label style="color: red;">(*)</label>
                            <input type="text" id="customer-cccd" class="form-control" />
                            <div class="invalid-feedback">err</div>
                        </div>
                        <div class="form-group">
                            <label>Giới tính</label>
                            <label style="color: red;">(*)</label>
                            <select id="customer-gender" class="form-control">
                                <option value="">-- Chọn giới tính --</option>
                                <option value="1">Nam</option>
                                <option value="0">Nữ</option>
                            </select>
                            <div class="invalid-feedback">err</div>
                        </div>
                        <div class="form-group">
                            <label>Địa chỉ</label>
                            <input type="text" id="customer-address" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label>Phòng</label>
                            <select id="cbbRoom" class="form-control" onchange="">
                            </select>
                        </div>
                        <div class="form-group">
                            <label>Ghi chú</label>
                            <label style="color: red;">(*)</label>
                            <input type="text" id="customer-note" class="form-control" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit"
                                class="btn btn-success rounded-border">
                            <i class="fa fa-save"></i> Lưu
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</body>
</html>
<script>
    let _list_customer = [];
    let _customer_index = -1;

	$(document).ready(function () {
        fnSetupTHTable('customer-table');
        fnGetCustomer();

        document.getElementById("overlay").style.display = "none";
        $("#customer-modal").on("show.bs.modal", function (e) {
            $("#item-code").removeClass("is-invalid");
            $("#item-name").removeClass("is-invalid");
		});

        $("#add-customer-btn").on("click", function () {
			fnOpenAddcustomerModal();
		});

        $("#close-modal").on("click", function () {
            $("#customer-modal").modal("hide");
        });

        $("#customer-form").on("submit", function (e) {
			e.preventDefault();
			fnValidateToPostCustomer();
        });

        $('#txtSearchInvoice').on('keyup', function () {
            const searchValue = $(this).val();
            fnUpdateItemCard(searchValue);
        });
	});

    function fnGetCustomer() {
        const customer = {
            ROOM_CODE: $("#cbbRoomSearch").val(),
            CUSTOMER_CODE: $("#txtCode").val(),
            CUSTOMER_NAME: $("#txtName").val(),
            CUSTOMER_CCCD: $("#txtCCCD").val(),
		}
		fnPostData(
			'@Url.Action("fnGetCustomer", "Home")',
            JSON.stringify(customer),
			function (msg) {
                _list_customer = msg.list;
                console.log(_list_customer);
                fnUpdateCustomerDataTable();
                //fnUpdateItemCard();
			}
		);
	}

	function HandleBrowseClick() {
        var fileinput = document.getElementById("file-template");
        fileinput.click();
    }

    function Handlechange() {
        var fileinput = document.getElementById("file-template");
        var textinput = document.getElementById("filename");
        textinput.value = fileinput.value;
	}

    function fnUpdateCustomerDataTable() {
		if (!$.fn.dataTable.isDataTable('#customer-table')) {
            const table = $('#customer-table').DataTable({
				"dom": 'lrtip', "paging": false,
				"order": [],
				"scrollX": true,
				"scrollY": "60vh",
				"scrollCollapse": true,
				"initComplete": function () {
					// Apply the search
					this.api().columns().every(function () {
						var that = this;
						$('input', this.header()).on('keyup change clear', function () {
							if (that.search() !== this.value) {
								that
									.search(this.value)
									.draw();
							}
						});
					});
				},
				"responsive": true,
				"destroy": true,
				"columns": [
					{
						data: null,
						render: function (data, type, row) {
							return "";
						}
                    },
                    { data: 'ROOM_CODE' },
                    { data: 'CUSTOMER_CODE' },
                    { data: 'CUSTOMER_NAME' },
                    { data: 'CUSTOMER_GENDER' },
                    { data: 'CUSTOMER_EMAIL' },
                    { data: 'CUSTOMER_PHONE' },
                    { data: 'CUSTOMER_CCCD' },
                    { data: 'CUSTOMER_ADDRESS' },
                    {
                        data: 'CUSTOMER_EXPIRYDATE',
                        render: function (data, type, row) {
                            return (new Date(data)).toLocaleDateString("en-GB");
                        }
                    },
                    { data: 'CREATE_USER' },
                    {
                        data: 'CREATE_DATE',
                        render: function (data, type, row) {
                            return (new Date(data)).toLocaleDateString("en-GB");
                        }
                    },
                    {
                        data: "STATUS",
                        render: function (data, type, row) {
                            if (data === "OBSOLETE") return "Hết hạn";
                            if (data === "ACTIVE") return "Đang hoạt động";
                            if (data === "PROCESSING") return "Chưa hoạt động";
                            return data ?? "";
                        }
                    },
                    { data: 'NOTE' },
					{
						data: null,
						render: function (data, type, row) {
							let htmlActionContent = ``;
							htmlActionContent +=
							`<a href="javascript:void(0);"
								class="badge badge-pill bg-success"
								onclick="fnOpenEditCustomerModal(${_list_customer.indexOf(row)})">
								<i class="fas fa-edit"></i> Sửa
							</a>`;
							htmlActionContent +=
							`<a href="javascript:void(0);"
								class="badge badge-pill bg-danger"
								onclick="fnRemoveCustomerClick(${_list_customer.indexOf(row)})">
								<i class="fas fa-trash"></i> xóa
							</a>`;
							return htmlActionContent;
						}
					},
				],
				'columnDefs': [
					{
						targets: 14,
						createdCell: function (td, cellData, rowData, row, col) {
							$(td).css('min-width', '130px');
							$(td).css('text-align', 'right');
						},
					},
                ],
                "createdRow": function (row, data, dataIndex) {
                    if (data.STATUS == "OBSOLETE") {
                        $(row).css("background-image", "linear-gradient(to right, #fff, #9e9e9e)");
                    }
                    else if (data.STATUS == "ACTIVE") {
                        $(row).css("background-image", "linear-gradient(to right, #fff, #d0f0d0)");
                    }
                }
			});
			table.on('order.dt search.dt', function () {
				table.column(0, {
					search: 'applied', order: 'applied'
				}).nodes().each(function (cell, i) {
					cell.innerHTML = i + 1;
				});
			}).draw();
		}
        $('#customer-table').dataTable().fnClearTable();
        if (_list_customer.length > 0) {
            $('#customer-table').dataTable().fnAddData(_list_customer);
		}
        fnUpdateDatalistTable('customer-table');
    }

    function fnUpdateItemCard(filter = '') {
        var html = ``;
        let keyword = filter.toLowerCase();

        _list_customer
            .filter(item =>
                item.ITEM_CODE.toLowerCase().includes(keyword) ||
                item.ITEM_NAME.toLowerCase().includes(keyword) ||
                item.UNIT.toLowerCase().includes(keyword) ||
                item.DESCRIPTION.toLowerCase().includes(keyword)
            ).forEach(function (item, index) {
                html += ``;
                html += `<div class="card col-12 mb-3 shadow" style="border-radius: 20px; background-color: whitesmoke ">`;
                html += `<div class="card-body border-0">`;
                html += `<div class="list-name-1">`;
                html += `<div class="d-flex justify-content-between" style="width:100%">`;
                html += `<div style="width:100%">`;
                html += `<div class="row">`;
                html += `<div class="col-xr-4 mr-3">`;
                html += `<h3 class=" badge-pill badge-success shadow" style="font-size:25px">${item.ITEM_CODE}</h3>`;
                html += `</div>`;
                html += `</div>`;
                html += `<div class="row mt-2">`;
                html += `<h4 class="badge badge-pill badge-secondary shadow" style="font-size:20px; white-space: normal; word-break: break-word;">Name: ${item.ITEM_NAME}</h4>`;
                html += `</div>`;
                html += `<div class="row">`;
                html += `<h4 class="badge badge-pill badge-secondary shadow" style="font-size:20px">Tax: ${item.UNIT}</h4>`;
                html += `</div>`;
                html += `<div class="row">`;
                html += `<h4 class="badge badge-pill badge-secondary shadow" style="font-size:20px">Total: ${item.PRICE.toLocaleString('vi-VN')}</h4>`;
                html += `</div>`;
                html += `<div class="row">`;
                html += `<h4 class="badge badge-pill badge-secondary shadow" style="font-size:20px; white-space: normal; word-break: break-word;">Note: ${item.DESCRIPTION}</h4>`;
                html += `</div>`;
                html += `<div class="row">`;
                html += `</div>`;
                //html += `<div class="row mt-2 d-flex flex-row-reverse">`;
                //html += ` <a href="javascript:void(0);"
                //    class="badge badge-pill bg-danger mr-2"
                //    onclick="fnRemoveSupplierClick(${_list_supplier.indexOf(item)})">
                //    <i class="fas fa-trash"></i> Xóa
                //</a>`;
                //html += `</div>`;
                html += `<div class="d-flex mt-2 gap-2">`;

                html += `<a href="javascript:void(0);"
                    class="badge bg-warning text-dark flex-fill text-center py-2"
                    onclick="fnOpenEditSupplierModal(${_list_item.indexOf(item)})">
                    <i class="fas fa-edit"></i> Sửa
                </a>`;

                html += `<a href="javascript:void(0);"
                    class="badge bg-danger text-white flex-fill text-center py-2"
                    onclick="fnRemoveSupplierClick(${_list_item.indexOf(item)})">
                    <i class="fas fa-trash"></i> Xóa
                </a>`;

                html += `</div>`;

                html += `</div>`;
                html += `</div>`;
                html += `</div>`;
                html += `</div>`;
                html += `</div>`;
            });
        $('#cardInvoice').empty();
        $('#cardInvoice').html(html);
    }

    function fnOpenAddcustomerModal() {
        $("#item-code").val("");
        $("#item-code").focus();
        $("#item-name").val("");
        $("#item-unit").val("");
        $("#item-price").val("");

        $("#item-description").val("");
        $("#customer-modal").modal("show");
	}

    function fnOpenEditCustomerModal(index) {
		_customer_index = index;
        const selectedItem = _list_customer[index];
        $("#item-code").val(selectedItem.ITEM_CODE);
        $("#item-code").focus();
        $("#item-name").val(selectedItem.ITEM_NAME);
        $("#item-unit").val(selectedItem.UNIT);
        $("#item-price").val(Number(selectedItem.PRICE).toLocaleString("vi-VN"));
        $("#item-description").val(selectedItem.DESCRIPTION);
        $("#customer-modal").modal("show");
	}

    function fnRemoveCustomerClick(index) {
		if (index > -1) {
            const selectedItem = _list_customer[index];
            fnShowConfirm("DELETE " + selectedItem.ITEM_CODE).then(result => {
				if (result.value) {
                    fnRemoveItem(selectedItem);
				}
			});
		}
	}

    function fnValidateToPostCustomer() {
        $("#item-code").removeClass("is-invalid");
        $("#item-name").removeClass("is-invalid");
        $("#item-unit").removeClass("is-invalid");
        $("#item-price").removeClass("is-invalid");
        const customerData = {
            item_CODE: $("#item-code").val(),
            item_NAME: $("#item-name").val(),
            UNIT: $("#item-unit").val(),
            PRICE: getPriceValue(),
            DESCRIPTION: $("#item-description").val(),
		};
        if (customerrData.item_NAME == "") {
            $("#item-name").addClass("is-invalid");
		}

        else if (_list_customer.some(s => s.ITEM_CODE == customerData.ITEM_CODE)
            && (_list_customer[_customer_index].ITEM_CODE != customerData.ITEM_CODE)) {
			fnShowError("ERR")
		}
		else {
            fnShowConfirm("Lưu " + customerData.item_CODE).then(result => {
				if (result.value) {
                    fnPostCustomer(customerData);
				}
			})
		}
	}

    function fnPostCustomer(customer) {
		fnPostData(
			'@Url.Action("fnPostCustomer", "Home")',
            JSON.stringify(customer),
			function (msg) {
				if (msg.ErrCode == "1") {
                    $("#customer-modal").modal("hide");
					fnShowSuccess();
                    fnGetCustomer();
				}
				else {
					fnShowError(msg.ErrMsg);
				}
			}
		);
    }

    function fnRemoveItem(customer) {
		fnPostData(
			'@Url.Action("fnRemoveItem", "Home")',
            JSON.stringify(customer),
			function (msg) {
				if (msg.ErrCode == "1") {
                    $("#customer-modal").modal("hide");
					fnShowSuccess();
                    fnGetItem();
				}
				else {
					fnShowError(msg.ErrMsg);
				}
			}
		);
	}

    document.addEventListener("DOMContentLoaded", function () {
        initMenuBehavior('#btnMenu', '#mainMenu');
    });

    function initMenuBehavior(menuButtonSelector, menuContainerSelector) {
        const btnMenu = document.querySelector(menuButtonSelector);
        const menuCollapse = document.querySelector(menuContainerSelector);

        if (!btnMenu || !menuCollapse) {
            console.warn("Không tìm thấy phần tử menu! Có thể selector sai hoặc chưa render.");
            return;
        }

        const bsCollapse = new bootstrap.Collapse(menuCollapse, {
            toggle: false // 👈 Không tự mở lúc tạo
        });

        btnMenu.addEventListener('click', () => {
            const isShown = menuCollapse.classList.contains('show');
            console.log('☰ Menu button clicked – Hiện tại:', isShown ? 'đang mở' : 'đang đóng');

            if (isShown) {
                bsCollapse.hide();
            } else {
                bsCollapse.show();
            }
        });

        // Auto close menu on link click (mobile)
        const menuLinks = menuCollapse.querySelectorAll('a');
        menuLinks.forEach(link => {
            link.addEventListener('click', () => {
                if (window.innerWidth < 992) {
                    bsCollapse.hide();
                }
            });
        });

        document.addEventListener('click', function (event) {
            const isClickInsideMenu = menuCollapse.contains(event.target);
            const isClickOnButton = btnMenu.contains(event.target);

            const isShown = menuCollapse.classList.contains('show');

            if (!isClickInsideMenu && !isClickOnButton && isShown) {
                bsCollapse.hide();
            }
        });
    }

    //const priceInput = document.getElementById("item-price");

    //priceInput.addEventListener("input", function (e) {
    //    let value = e.target.value.replace(/[^0-9]/g, "");
    //    if (value === "") {
    //        e.target.value = "";
    //        return;
    //    }
    //    e.target.value = parseInt(value, 10).toLocaleString("vi-VN");
    //});

    //function getPriceValue() {
    //    const raw = priceInput.value;
    //    return raw.replace(/\./g, "");
    //}

    function fnGetRoom() {
        var item = {
            OPR_ID: $('#cbbOPR').val(),
			PROCESS_TYPE: "ACC"
        };
        fnPostDataWithoutOverlay(
            '@Url.Action("fnGetRoom", "Home")',
            JSON.stringify(item),
            function (msg) {
                fnUpdateListRoom(msg.list);
                fnUpdateListRoomSearch(msg.list);
            }
        );
    }
    function fnUpdateListRoom(list) {
        var html = '<option value="">All</option>';
        list.forEach(function (item, index) {
            html += '<option value="' + item.ROOM_CODE + '">' + item.ROOM_NAME + '</option>';
        });
        $('#cbbRoom').empty();
        $('#cbbRoom').html(html);
    }

    function fnUpdateListRoomSearch(list) {
        var html = '<option value="">All</option>';
        list.forEach(function (item, index) {
            html += '<option value="' + item.ROOM_CODE + '">' + item.ROOM_NAME + '</option>';
        });
        $('#cbbRoomSearch').empty();
        $('#cbbRoomSearch').html(html);
    }
</script>
