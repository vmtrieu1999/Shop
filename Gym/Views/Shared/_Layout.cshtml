@{
    var userSession = Session["USER_SESSION"] as Gym.UserSession;
    var username = userSession?.Username ?? "Guest";
    var company_code = userSession?.CompanyCode ?? "";
    var role = userSession?.Role ?? "0";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/all.min.css" />
    <link rel="stylesheet" href="~/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="~/css/jquery.dataTables.css">
    <link rel="stylesheet" type="text/css" href="~/css/dataTables.min.css">
    <link rel="stylesheet" type="text/css" href="~/css/bootstrap-select.min.css">

    <script src="@Url.Content("~/Scripts/jquery-3.5.1.min.js")"></script>
    <script src="@Url.Content("~/Scripts/bootstrap.bundle-5.3.3.min.js")"></script>

    <link rel="manifest" href="/manifest.json">

    <!-- Favicon -->
    <link rel="icon" type="image/png" sizes="32x32" href="@Url.Content("~/images/gym_10484999.png")" />
    <link rel="icon" type="image/png" sizes="16x16" href="@Url.Content("~/images/gym_10484999.png")" />

    <!-- Cho Android / Chrome -->
    <meta name="theme-color" content="#0077b6">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="application-name" content="Shop Fish">

    <!-- Shortcut icon PWA -->
    <link rel="shortcut icon" sizes="192x192" href="@Url.Content("~/images/gym_10484999.png")">

    <!-- Cho iOS -->
    <link rel="apple-touch-icon" sizes="180x180" href="~/images/gym_10484999.png">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="default">
    <meta name="apple-mobile-web-app-title" content="Shop Fish">

    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
<style>
        @*body {
            background-image: url('@Url.Content("~/images/gym_back.jpg")');
            background-size: cover;
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-position: center center;
        }*@
        body {
            position: relative;
            margin: 0;
            padding: 0;
            min-height: 100vh;
            background: none; 
        }

        body::before {
            content: "";
            position: fixed;       
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('@Url.Content("~/images/gym_back.webp")');
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center center;
            filter: blur(5px);     
            z-index: -1;          
        }

        table.dataTable tbody th, table.dataTable tbody td {
            padding: 4px 4px;
        }

        table.dataTable thead th, table.dataTable thead td {
            padding: 4px 16px;
        }

        table.dataTable tfoot th, table.dataTable tfoot td {
            padding: 4px 4px;
            border: none;
        }

        table.dataTable thead th, table.dataTable thead td {
            border: none;
        }

        .dataTables_wrapper.no-footer .dataTables_scrollBody {
            border: none;
        }

        .table-rounded thead th {
            border: none;
        }

        .table-rounded.dataTable {
            border-collapse: separate;
            border-spacing: 0 5px;
        }

        .table-rounded td {
            border: none;
            box-shadow: 0px 2px rgba(128, 128, 128, 0.2);
        }

        .table-rounded tr:first-child, .table-rounded td:first-child {
            border-top-left-radius: 6px;
            border-bottom-left-radius: 6px;
        }

        .table-rounded tr:last-child, .table-rounded td:last-child {
            border-top-right-radius: 6px;
            border-bottom-right-radius: 6px;
        }

        .footer {
            position: fixed;
            left: 0;
            bottom: 0;
            width: 100%;
            text-align: center;
            background-color: rgba(245,245,245,0.9);
        }

        .align-items-center:hover {
            background-color: rgba(245,245,245,0.9);
        }

        b {
            color: #337ab7;
        }

        .badge-pill {
            color: white;
        }

            .badge-pill:hover {
                color: whitesmoke;
            }

        .col-lg-0 {
            position: absolute;
            top: 70px;
            right: 0;
            bottom: 0;
            left: 0;
        }

        .filter-option-inner-inner {
            color: #337ab7;
        }

        .form-control {
            height: 2rem;
            padding: 0 0.3rem 0 0.3rem;
            color: #337ab7;
        }

        .form-group {
            margin-bottom: 0.5rem;
        }

        label {
            margin-bottom: 0.25rem;
        }

        #navbar {
            background-color: white;
        }

        .nav-item {
            margin: 6px;
        }

        p {
            margin-bottom: 0;
        }
</style>
</head>
<body>
    <div id="overlay" style="text-align: center; position: fixed; background: rgba(0,0,0,0.2); width: 100%; height: 100%; top: 0; left: 0;  z-index: 9999;">
        <div class="loader col-md-12" style="position: fixed; top: 50%;">
            <div class="spinner-grow text-muted"></div>
            <div class="spinner-grow text-primary"></div>
            <div class="spinner-grow text-success"></div>
            <div class="spinner-grow text-info"></div>
            <div class="spinner-grow text-warning"></div>
            <div class="spinner-grow text-danger"></div>
            <div class="spinner-grow text-secondary"></div>
            <div class="spinner-grow text-dark"></div>
            <div class="spinner-grow text-light"></div>
        </div>
    </div>
    <div class="">
        @RenderBody()
        <div class="container-fluid fixed-top shadow-lg" style="background-color: rgba(255,255,255,1)">
            <!-- Nút hamburger thu gọn, chỉ hiển thị trên màn nhỏ -->
            <div class="d-lg-none d-flex justify-content-between align-items-center mb-2 px-3">
                <div class="flex-grow-1 text-center">
                    <h5 class="fw-bold text-primary m-0" style="letter-spacing: 1px;">
                        GYM SHOP
                    </h5>
                </div>
                <button id="btnMenu"
                        class="btn btn-outline-secondary ms-3"
                        type="button"
                        aria-expanded="false"
                        aria-controls="mainMenu">
                    ☰ Menu
                </button>
            </div>

            <!-- Menu chính -->
            <div class="collapse d-lg-flex flex-wrap align-items-center justify-content-center" id="mainMenu">
                <div class="dropdown m-2">
                    <button class="btn btn-light dropdown-toggle" type="button" id="userDropdown"
                            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"
                            style="border-radius: 20px;">
                        <i class="fas fa-user"></i>  @username
                    </button>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="userDropdown">
                        @*<a class="dropdown-item" href="#">
                            <i class="fas fa-user"></i> <span>Thông tin người dùng</span>
                        </a>*@
                        <a class="dropdown-item" href="@Url.Action("ChangePassword","Home")">
                            <i class="fas fa-unlock"></i> <span>Đổi mật khẩu</span>
                        </a>
                        @if (role == "1")
                        {
                            <a class="dropdown-item" href="@Url.Action("UserPage","Home")">
                            <i class="fas fa-users"></i> <span>Quản lý người dùng</span>
                            </a>
                        }
                        <a class="dropdown-item" href="@Url.Action("Logout", "Home")">
                            <i class="fas fa-sign-out-alt"></i> <span>Đăng xuất</span>
                        </a>
                    </div>
                </div>
                @{
                    string currentController = ViewContext.RouteData.Values["controller"]?.ToString();
                    string currentAction = ViewContext.RouteData.Values["action"]?.ToString();
                }

                @if (username == "admin" && company_code == "VMT")
                {
                    <a href="@Url.Action("CompanyPage", "Home")"
                       class="btn @(currentAction == "CompanyPage" ? "btn-primary" : "btn-light") m-2"
                       style="border-radius: 20px;">
                        <i class="fas fa-building"></i> Danh sách công ty
                    </a>
                }

                <a href="@Url.Action("Index", "Home")"
                   class="btn @(currentAction == "Index" ? "btn-primary" : "btn-light") m-2"
                   style="border-radius: 20px;">
                    <i class="fas fa-users"></i> Khách hàng
                </a>

                <a href="@Url.Action("Packages", "Home")"
                   class="btn @(currentAction == "Packages" ? "btn-primary" : "btn-light") m-2"
                   style="border-radius: 20px;">
                    <i class="fas fa-box"></i> Gói đăng ký
                </a>

                <a href="@Url.Action("RoomPage", "Home")"
                   class="btn @(currentAction == "RoomPage" ? "btn-primary" : "btn-light") m-2"
                   style="border-radius: 20px;">
                    <i class="fas fa-door-open"></i> Phòng
                </a>
            </div>
        </div>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    <script src="~/Scripts/jquery.min.js"></script>
    <script src="~/Scripts/popper.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/jquery.dataTables.js"></script>
    <script src="~/Scripts/jquery.dataTables.min.js" defer></script>
    <script src="~/Scripts/sweetalert2.js"></script>
    <script src="~/Scripts/bootstrap-select.min.js"></script>

    <script>


        function fnPostData(url, text, callback, hideOverlay = 0) {
            if (hideOverlay == 0){
               document.getElementById("overlay").style.display = "block";
            }
            $.ajax({
                type: 'POST',
                url: url,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ strInput: text }),
                success: function (msg) {
                    if (msg.error_session == "1") {
                        window.location.href = '@Url.Action("Login", "Home")?returnUrl=@Url.Action().Replace("VTTMIC/", "")';
                    }
                    else {
                        callback(msg);
                    }
                    setTimeout(function () { document.getElementById("overlay").style.display = "none"; }, 400);
                },
                error: function (response) {
                    Swal.fire({ icon: 'error', title: 'Error', html: response.responseText });
                    setTimeout(function () { document.getElementById("overlay").style.display = "none"; }, 400);
                }
            });
        }

        function fnUpdateDatalistTable(tblID) {
            $('#' + tblID).DataTable().columns().every(function (index) {
                var title = $($('#' + tblID + ' thead th')[index]).text();
                if (title != '') {
                    var column = this;
                    var id = '#datalist' + tblID + index;
                    var html = '';
                    html += '<option value=""></option>';
                    column.cache('search').unique().sort().each(function (d, j) {
                        if (d != null) {
                            html += '<option value="' + d + '"></option>';
                        }
                    });

                    $(id).empty();
                    $(id).html(html);
                }
            });
        }

        function fnSetupTHTable(tblID) {
            $('#' + tblID + ' thead th').each(function (index) {
                var id = tblID + index;
                var title = $(this).text();
                $(this).html('<label>' + title + (title != '' ? '</label> <input type="text" class="form-control" placeholder="Tìm" list="datalist' + id + '" /><datalist id="datalist' + id + '"></datalist>' : ''));
                $('input', this).click(function (event) {
                    event.stopPropagation();
                });
            });
        }

        function fnShowConfirm(info = "", message = "") {
	        return Swal.fire({
		        title: info + "?",
		        text: message,
		        icon: "question",
		        showCancelButton: true,
		        confirmButtonColor: "#42ba96",
		        confirmButtonText: "YES",
		        cancelButtonText: "NO"
	        })
        }

        function fnShowSuccess() {
            Swal.fire({
                icon: "success",
                title: "SUCCESS",
                showConfirmButton: false,
                timer: 1000
            });
        }

        function fnShowError(message, title = "Error") {
            Swal.fire({
                icon: "error",
                title: title,
                html: message,
            });
        }

        function fnPostDataWithoutOverlay(url, text, callback) {
            $.ajax({
                type: 'POST',
                url: url,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ strInput: text }),
                success: function (msg) {
                    if (msg.error_session == "1") {

                    }
                    else {
                        callback(msg);
                    }
                },
                error: function (response) {
                    Swal.fire({ icon: 'error', title: 'Error', html: response.responseText });
                }
            });
        }

        function fnFormatDate(dateString) {
            let date = new Date(dateString);

            let day = String(date.getDate()).padStart(2, '0');
            let month = String(date.getMonth() + 1).padStart(2, '0');
            let year = date.getFullYear();

            let hours = String(date.getHours()).padStart(2, '0');
            let minutes = String(date.getMinutes()).padStart(2, '0');
            let seconds = String(date.getSeconds()).padStart(2, '0');

            return `${day}/${month}/${year}`;
        }

        document.addEventListener("DOMContentLoaded", function () {
            initMenuBehavior('#btnMenu', '#mainMenu');
        });

        function initMenuBehavior(menuButtonSelector, menuContainerSelector) {
            const btnMenu = document.querySelector(menuButtonSelector);
            const menuCollapse = document.querySelector(menuContainerSelector);

            if (!btnMenu || !menuCollapse) {
                console.warn("Không tìm thấy phần tử menu! Có thể selector sai hoặc chưa render.");
                return;
            }

            const bsCollapse = new bootstrap.Collapse(menuCollapse, {
                toggle: false
            });

            btnMenu.addEventListener('click', () => {
                const isShown = menuCollapse.classList.contains('show');
                console.log('☰ Menu button clicked – Hiện tại:', isShown ? 'đang mở' : 'đang đóng');

                if (isShown) {
                    bsCollapse.hide();
                } else {
                    bsCollapse.show();
                }
            });

            const menuLinks = menuCollapse.querySelectorAll('a');
            menuLinks.forEach(link => {
                link.addEventListener('click', () => {
                    if (window.innerWidth < 992) {
                        bsCollapse.hide();
                    }
                });
            });

            document.addEventListener('click', function (event) {
                const isClickInsideMenu = menuCollapse.contains(event.target);
                const isClickOnButton = btnMenu.contains(event.target);

                const isShown = menuCollapse.classList.contains('show');

                if (!isClickInsideMenu && !isClickOnButton && isShown) {
                    bsCollapse.hide();
                }
            });
        }
    </script>

</body>
</html>
